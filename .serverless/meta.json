{
  "C:\\Users\\Dell\\Documents\\prueba_amaris\\backend\\serverless.yml": {
    "versionFramework": "4.14.2",
    "servicePath": "C:\\Users\\Dell\\Documents\\prueba_amaris\\backend\\serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "prueba-tecnica-mvc",
      "plugins": [
        "serverless-plugin-include-dependencies"
      ],
      "provider": {
        "name": "aws",
        "runtime": "python3.8",
        "region": "us-east-1",
        "stage": "dev",
        "iamRoleStatements": [
          {
            "Action": [
              "dynamodb:*",
              "sns:Publish"
            ],
            "Effect": "Allow",
            "Resource": "*"
          }
        ],
        "versionFunctions": true,
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "CancelarFondoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-cancelarFondo"
              }
            },
            "CrearUsuarioLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-crearUsuario"
              }
            },
            "ObtenerHistorialLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-obtenerHistorial"
              }
            },
            "SuscribirFondoLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-suscribirFondo"
              }
            },
            "ListarUsuariosLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-listarUsuarios"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "prueba-tecnica-mvc",
                          "dev",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/prueba-tecnica-mvc-dev*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/prueba-tecnica-mvc-dev*:*:*"
                            }
                          ]
                        },
                        {
                          "Action": [
                            "dynamodb:*",
                            "sns:Publish"
                          ],
                          "Effect": "Allow",
                          "Resource": "*"
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "prueba-tecnica-mvc",
                      "dev",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "CancelarFondoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
                  "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
                },
                "Handler": "lambda_functions/cancelar_fondo.cancelarFondo",
                "Runtime": "python3.8",
                "FunctionName": "prueba-tecnica-mvc-dev-cancelarFondo",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CancelarFondoLogGroup"
              ]
            },
            "CrearUsuarioLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
                  "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
                },
                "Handler": "lambda_functions/crear_usuario.crear_usuario",
                "Runtime": "python3.8",
                "FunctionName": "prueba-tecnica-mvc-dev-crearUsuario",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "CrearUsuarioLogGroup"
              ]
            },
            "ObtenerHistorialLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
                  "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
                },
                "Handler": "lambda_functions/historial.obtener_historial",
                "Runtime": "python3.8",
                "FunctionName": "prueba-tecnica-mvc-dev-obtenerHistorial",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ObtenerHistorialLogGroup"
              ]
            },
            "SuscribirFondoLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
                  "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
                },
                "Handler": "lambda_functions/suscribir_fondo.suscribir_fondo",
                "Runtime": "python3.8",
                "FunctionName": "prueba-tecnica-mvc-dev-suscribirFondo",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "SuscribirFondoLogGroup"
              ]
            },
            "ListarUsuariosLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
                  "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
                },
                "Handler": "lambda_functions/listar_usuarios.listar_usuarios",
                "Runtime": "python3.8",
                "FunctionName": "prueba-tecnica-mvc-dev-listarUsuarios",
                "MemorySize": 1024,
                "Timeout": 6,
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ListarUsuariosLogGroup"
              ]
            },
            "CancelarFondoLambdaVersionZUCfbiANnYV8hKewk1gCC0lq2v0rAktW7ypoxKSXoU": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CancelarFondoLambdaFunction"
                },
                "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
              }
            },
            "CrearUsuarioLambdaVersionZlA5ayJlw6eH5M25K3gxTlqhm0SjKTkj5IuLlWDxYg": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "CrearUsuarioLambdaFunction"
                },
                "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
              }
            },
            "ObtenerHistorialLambdaVersionVaZwnPVpWyxNE3jRflMCo3ACro2F04IZtgJSjZrwI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ObtenerHistorialLambdaFunction"
                },
                "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
              }
            },
            "SuscribirFondoLambdaVersionXnDITV4ydH8y2jV1kFUzPgQ0EQ3oBKaIja2tEOqxI": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "SuscribirFondoLambdaFunction"
                },
                "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
              }
            },
            "ListarUsuariosLambdaVersiondRYsWh0Q3LZGD24jzDONAjSdsJnPa2Kh03goQevPM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ListarUsuariosLambdaFunction"
                },
                "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "dev-prueba-tecnica-mvc",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceFondos": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "fondos",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFondosCancelar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFondos"
                },
                "PathPart": "cancelar",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceFondosSuscribir": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceFondos"
                },
                "PathPart": "suscribir",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUsuario": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "usuario",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUsuarioCrearusuario": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUsuario"
                },
                "PathPart": "crear_usuario",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUsuarios": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "usuarios",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUsuariosIdusuarioVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUsuarios"
                },
                "PathPart": "{idUsuario}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayResourceUsuariosIdusuarioVarHistorial": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Ref": "ApiGatewayResourceUsuariosIdusuarioVar"
                },
                "PathPart": "historial",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFondosCancelarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFondosCancelar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUsuarioCrearusuarioOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUsuarioCrearusuario"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUsuariosIdusuarioVarHistorialOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUsuariosIdusuarioVarHistorial"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFondosSuscribirOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFondosSuscribir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUsuariosOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUsuarios"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodUsuariosIdusuarioVarOptions": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "AuthorizationType": "NONE",
                "HttpMethod": "OPTIONS",
                "MethodResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": true,
                      "method.response.header.Access-Control-Allow-Headers": true,
                      "method.response.header.Access-Control-Allow-Methods": true
                    },
                    "ResponseModels": {}
                  }
                ],
                "RequestParameters": {},
                "Integration": {
                  "Type": "MOCK",
                  "RequestTemplates": {
                    "application/json": "{statusCode:200}"
                  },
                  "ContentHandling": "CONVERT_TO_TEXT",
                  "IntegrationResponses": [
                    {
                      "StatusCode": "200",
                      "ResponseParameters": {
                        "method.response.header.Access-Control-Allow-Origin": "'*'",
                        "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                        "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                      },
                      "ResponseTemplates": {
                        "application/json": ""
                      }
                    }
                  ]
                },
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUsuariosIdusuarioVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodFondosCancelarPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFondosCancelar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CancelarFondoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CancelarFondoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUsuarioCrearusuarioPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUsuarioCrearusuario"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "CrearUsuarioLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "CrearUsuarioLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUsuariosIdusuarioVarHistorialGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUsuariosIdusuarioVarHistorial"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ObtenerHistorialLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ObtenerHistorialLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodFondosSuscribirPost": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "POST",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceFondosSuscribir"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "SuscribirFondoLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "SuscribirFondoLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUsuariosGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUsuarios"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ListarUsuariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ListarUsuariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodUsuariosIdusuarioVarGet": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "GET",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceUsuariosIdusuarioVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ListarUsuariosLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ListarUsuariosLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1746457999254": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "dev"
              },
              "DependsOn": [
                "ApiGatewayMethodFondosCancelarOptions",
                "ApiGatewayMethodUsuarioCrearusuarioOptions",
                "ApiGatewayMethodUsuariosIdusuarioVarHistorialOptions",
                "ApiGatewayMethodFondosSuscribirOptions",
                "ApiGatewayMethodUsuariosOptions",
                "ApiGatewayMethodUsuariosIdusuarioVarOptions",
                "ApiGatewayMethodFondosCancelarPost",
                "ApiGatewayMethodUsuarioCrearusuarioPost",
                "ApiGatewayMethodUsuariosIdusuarioVarHistorialGet",
                "ApiGatewayMethodFondosSuscribirPost",
                "ApiGatewayMethodUsuariosGet",
                "ApiGatewayMethodUsuariosIdusuarioVarGet"
              ]
            },
            "CancelarFondoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CancelarFondoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "CrearUsuarioLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "CrearUsuarioLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ObtenerHistorialLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ObtenerHistorialLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "SuscribirFondoLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "SuscribirFondoLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "ListarUsuariosLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ListarUsuariosLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            },
            "FondosTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "Fondos",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "id",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "id",
                    "KeyType": "HASH"
                  }
                ]
              }
            },
            "UsuariosTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "Usuarios",
                "BillingMode": "PAY_PER_REQUEST",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "idUsuario",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "idUsuario",
                    "KeyType": "HASH"
                  }
                ]
              }
            },
            "SuscripcionesTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "Suscripciones",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "idUsuario",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "idFondo",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "idUsuario",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "idFondo",
                    "KeyType": "RANGE"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            },
            "TransaccionesTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "Transacciones",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "idTransaccion",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "idUsuario",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "idTransaccion",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "idUsuario",
                    "KeyType": "RANGE"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST",
                "GlobalSecondaryIndexes": [
                  {
                    "IndexName": "UsuarioIndex",
                    "KeySchema": [
                      {
                        "AttributeName": "idUsuario",
                        "KeyType": "HASH"
                      }
                    ],
                    "Projection": {
                      "ProjectionType": "ALL"
                    }
                  }
                ]
              }
            },
            "CancelacionesTable": {
              "Type": "AWS::DynamoDB::Table",
              "Properties": {
                "TableName": "Cancelaciones",
                "AttributeDefinitions": [
                  {
                    "AttributeName": "idTransaccion",
                    "AttributeType": "S"
                  },
                  {
                    "AttributeName": "idUsuario",
                    "AttributeType": "S"
                  }
                ],
                "KeySchema": [
                  {
                    "AttributeName": "idTransaccion",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "idUsuario",
                    "KeyType": "RANGE"
                  }
                ],
                "BillingMode": "PAY_PER_REQUEST"
              }
            },
            "NotificacionesPolicy": {
              "Type": "AWS::IAM::Policy",
              "Properties": {
                "PolicyName": "NotificacionesAccess",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "ses:SendEmail",
                        "sns:Publish"
                      ],
                      "Resource": "*"
                    }
                  ]
                },
                "Roles": [
                  {
                    "Ref": "IamRoleLambdaExecution"
                  }
                ]
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
              "Export": {
                "Name": "sls-prueba-tecnica-mvc-dev-ServerlessDeploymentBucketName"
              }
            },
            "CancelarFondoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CancelarFondoLambdaVersionZUCfbiANnYV8hKewk1gCC0lq2v0rAktW7ypoxKSXoU"
              },
              "Export": {
                "Name": "sls-prueba-tecnica-mvc-dev-CancelarFondoLambdaFunctionQualifiedArn"
              }
            },
            "CrearUsuarioLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "CrearUsuarioLambdaVersionZlA5ayJlw6eH5M25K3gxTlqhm0SjKTkj5IuLlWDxYg"
              },
              "Export": {
                "Name": "sls-prueba-tecnica-mvc-dev-CrearUsuarioLambdaFunctionQualifiedArn"
              }
            },
            "ObtenerHistorialLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ObtenerHistorialLambdaVersionVaZwnPVpWyxNE3jRflMCo3ACro2F04IZtgJSjZrwI"
              },
              "Export": {
                "Name": "sls-prueba-tecnica-mvc-dev-ObtenerHistorialLambdaFunctionQualifiedArn"
              }
            },
            "SuscribirFondoLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "SuscribirFondoLambdaVersionXnDITV4ydH8y2jV1kFUzPgQ0EQ3oBKaIja2tEOqxI"
              },
              "Export": {
                "Name": "sls-prueba-tecnica-mvc-dev-SuscribirFondoLambdaFunctionQualifiedArn"
              }
            },
            "ListarUsuariosLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ListarUsuariosLambdaVersiondRYsWh0Q3LZGD24jzDONAjSdsJnPa2Kh03goQevPM"
              },
              "Export": {
                "Name": "sls-prueba-tecnica-mvc-dev-ListarUsuariosLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/dev"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-prueba-tecnica-mvc-dev-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "functions": {
        "cancelarFondo": {
          "handler": "lambda_functions/cancelar_fondo.cancelarFondo",
          "events": [
            {
              "http": {
                "method": "post",
                "path": "fondos/cancelar",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "prueba-tecnica-mvc-dev-cancelarFondo",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "CancelarFondoLambdaVersionZUCfbiANnYV8hKewk1gCC0lq2v0rAktW7ypoxKSXoU"
        },
        "crearUsuario": {
          "handler": "lambda_functions/crear_usuario.crear_usuario",
          "events": [
            {
              "http": {
                "method": "post",
                "path": "usuario/crear_usuario",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "prueba-tecnica-mvc-dev-crearUsuario",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "CrearUsuarioLambdaVersionZlA5ayJlw6eH5M25K3gxTlqhm0SjKTkj5IuLlWDxYg"
        },
        "obtenerHistorial": {
          "handler": "lambda_functions/historial.obtener_historial",
          "events": [
            {
              "http": {
                "path": "usuarios/{idUsuario}/historial",
                "method": "get",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "prueba-tecnica-mvc-dev-obtenerHistorial",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "ObtenerHistorialLambdaVersionVaZwnPVpWyxNE3jRflMCo3ACro2F04IZtgJSjZrwI"
        },
        "suscribirFondo": {
          "handler": "lambda_functions/suscribir_fondo.suscribir_fondo",
          "events": [
            {
              "http": {
                "method": "post",
                "path": "fondos/suscribir",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "POST"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "prueba-tecnica-mvc-dev-suscribirFondo",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "SuscribirFondoLambdaVersionXnDITV4ydH8y2jV1kFUzPgQ0EQ3oBKaIja2tEOqxI"
        },
        "listarUsuarios": {
          "handler": "lambda_functions/listar_usuarios.listar_usuarios",
          "events": [
            {
              "http": {
                "method": "get",
                "path": "usuarios",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            },
            {
              "http": {
                "method": "get",
                "path": "usuarios/{idUsuario}",
                "cors": {
                  "origin": "*",
                  "methods": [
                    "OPTIONS",
                    "GET"
                  ],
                  "headers": [
                    "Content-Type",
                    "X-Amz-Date",
                    "Authorization",
                    "X-Api-Key",
                    "X-Amz-Security-Token",
                    "X-Amz-User-Agent",
                    "X-Amzn-Trace-Id"
                  ],
                  "allowCredentials": "<REDACTED>"
                },
                "integration": "AWS_PROXY"
              }
            }
          ],
          "name": "prueba-tecnica-mvc-dev-listarUsuarios",
          "package": {},
          "memory": 1024,
          "timeout": 6,
          "runtime": "python3.8",
          "vpc": {},
          "versionLogicalId": "ListarUsuariosLambdaVersiondRYsWh0Q3LZGD24jzDONAjSdsJnPa2Kh03goQevPM"
        }
      },
      "resources": {
        "Resources": {
          "FondosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Fondos",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "UsuariosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Usuarios",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idUsuario",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idUsuario",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "SuscripcionesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Suscripciones",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idUsuario",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "idFondo",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idUsuario",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "idFondo",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "TransaccionesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Transacciones",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idTransaccion",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "idUsuario",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idTransaccion",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "idUsuario",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "UsuarioIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "idUsuario",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "CancelacionesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Cancelaciones",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idTransaccion",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "idUsuario",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idTransaccion",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "idUsuario",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "NotificacionesPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
              "PolicyName": "NotificacionesAccess",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "ses:SendEmail",
                      "sns:Publish"
                    ],
                    "Resource": "*"
                  }
                ]
              },
              "Roles": [
                {
                  "Ref": "IamRoleLambdaExecution"
                }
              ]
            }
          }
        },
        "Outputs": {}
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.8",
      "region": "us-east-1",
      "stage": "dev",
      "iamRoleStatements": [
        {
          "Action": [
            "dynamodb:*",
            "sns:Publish"
          ],
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CancelarFondoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-cancelarFondo"
            }
          },
          "CrearUsuarioLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-crearUsuario"
            }
          },
          "ObtenerHistorialLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-obtenerHistorial"
            }
          },
          "SuscribirFondoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-suscribirFondo"
            }
          },
          "ListarUsuariosLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-listarUsuarios"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "prueba-tecnica-mvc",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/prueba-tecnica-mvc-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/prueba-tecnica-mvc-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Action": [
                          "dynamodb:*",
                          "sns:Publish"
                        ],
                        "Effect": "Allow",
                        "Resource": "*"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "prueba-tecnica-mvc",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CancelarFondoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
                "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
              },
              "Handler": "lambda_functions/cancelar_fondo.cancelarFondo",
              "Runtime": "python3.8",
              "FunctionName": "prueba-tecnica-mvc-dev-cancelarFondo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CancelarFondoLogGroup"
            ]
          },
          "CrearUsuarioLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
                "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
              },
              "Handler": "lambda_functions/crear_usuario.crear_usuario",
              "Runtime": "python3.8",
              "FunctionName": "prueba-tecnica-mvc-dev-crearUsuario",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CrearUsuarioLogGroup"
            ]
          },
          "ObtenerHistorialLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
                "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
              },
              "Handler": "lambda_functions/historial.obtener_historial",
              "Runtime": "python3.8",
              "FunctionName": "prueba-tecnica-mvc-dev-obtenerHistorial",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ObtenerHistorialLogGroup"
            ]
          },
          "SuscribirFondoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
                "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
              },
              "Handler": "lambda_functions/suscribir_fondo.suscribir_fondo",
              "Runtime": "python3.8",
              "FunctionName": "prueba-tecnica-mvc-dev-suscribirFondo",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SuscribirFondoLogGroup"
            ]
          },
          "ListarUsuariosLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
                "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
              },
              "Handler": "lambda_functions/listar_usuarios.listar_usuarios",
              "Runtime": "python3.8",
              "FunctionName": "prueba-tecnica-mvc-dev-listarUsuarios",
              "MemorySize": 1024,
              "Timeout": 6,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ListarUsuariosLogGroup"
            ]
          },
          "CancelarFondoLambdaVersionZUCfbiANnYV8hKewk1gCC0lq2v0rAktW7ypoxKSXoU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CancelarFondoLambdaFunction"
              },
              "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
            }
          },
          "CrearUsuarioLambdaVersionZlA5ayJlw6eH5M25K3gxTlqhm0SjKTkj5IuLlWDxYg": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CrearUsuarioLambdaFunction"
              },
              "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
            }
          },
          "ObtenerHistorialLambdaVersionVaZwnPVpWyxNE3jRflMCo3ACro2F04IZtgJSjZrwI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ObtenerHistorialLambdaFunction"
              },
              "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
            }
          },
          "SuscribirFondoLambdaVersionXnDITV4ydH8y2jV1kFUzPgQ0EQ3oBKaIja2tEOqxI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SuscribirFondoLambdaFunction"
              },
              "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
            }
          },
          "ListarUsuariosLambdaVersiondRYsWh0Q3LZGD24jzDONAjSdsJnPa2Kh03goQevPM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListarUsuariosLambdaFunction"
              },
              "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-prueba-tecnica-mvc",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceFondos": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "fondos",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFondosCancelar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFondos"
              },
              "PathPart": "cancelar",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFondosSuscribir": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFondos"
              },
              "PathPart": "suscribir",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsuario": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "usuario",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsuarioCrearusuario": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsuario"
              },
              "PathPart": "crear_usuario",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsuarios": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "usuarios",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsuariosIdusuarioVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsuarios"
              },
              "PathPart": "{idUsuario}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUsuariosIdusuarioVarHistorial": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceUsuariosIdusuarioVar"
              },
              "PathPart": "historial",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFondosCancelarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFondosCancelar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsuarioCrearusuarioOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsuarioCrearusuario"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsuariosIdusuarioVarHistorialOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsuariosIdusuarioVarHistorial"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFondosSuscribirOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceFondosSuscribir"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsuariosOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsuarios"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodUsuariosIdusuarioVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsuariosIdusuarioVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodFondosCancelarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFondosCancelar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CancelarFondoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CancelarFondoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsuarioCrearusuarioPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsuarioCrearusuario"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CrearUsuarioLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CrearUsuarioLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsuariosIdusuarioVarHistorialGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsuariosIdusuarioVarHistorial"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ObtenerHistorialLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ObtenerHistorialLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodFondosSuscribirPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFondosSuscribir"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SuscribirFondoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "SuscribirFondoLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsuariosGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsuarios"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListarUsuariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListarUsuariosLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodUsuariosIdusuarioVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUsuariosIdusuarioVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": "<REDACTED>",
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListarUsuariosLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListarUsuariosLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1746457999254": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodFondosCancelarOptions",
              "ApiGatewayMethodUsuarioCrearusuarioOptions",
              "ApiGatewayMethodUsuariosIdusuarioVarHistorialOptions",
              "ApiGatewayMethodFondosSuscribirOptions",
              "ApiGatewayMethodUsuariosOptions",
              "ApiGatewayMethodUsuariosIdusuarioVarOptions",
              "ApiGatewayMethodFondosCancelarPost",
              "ApiGatewayMethodUsuarioCrearusuarioPost",
              "ApiGatewayMethodUsuariosIdusuarioVarHistorialGet",
              "ApiGatewayMethodFondosSuscribirPost",
              "ApiGatewayMethodUsuariosGet",
              "ApiGatewayMethodUsuariosIdusuarioVarGet"
            ]
          },
          "CancelarFondoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CancelarFondoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "CrearUsuarioLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CrearUsuarioLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ObtenerHistorialLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ObtenerHistorialLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SuscribirFondoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SuscribirFondoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListarUsuariosLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListarUsuariosLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FondosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Fondos",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "UsuariosTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Usuarios",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idUsuario",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idUsuario",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "SuscripcionesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Suscripciones",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idUsuario",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "idFondo",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idUsuario",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "idFondo",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "TransaccionesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Transacciones",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idTransaccion",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "idUsuario",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idTransaccion",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "idUsuario",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "UsuarioIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "idUsuario",
                      "KeyType": "HASH"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          },
          "CancelacionesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "Cancelaciones",
              "AttributeDefinitions": [
                {
                  "AttributeName": "idTransaccion",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "idUsuario",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "idTransaccion",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "idUsuario",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST"
            }
          },
          "NotificacionesPolicy": {
            "Type": "AWS::IAM::Policy",
            "Properties": {
              "PolicyName": "NotificacionesAccess",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "ses:SendEmail",
                      "sns:Publish"
                    ],
                    "Resource": "*"
                  }
                ]
              },
              "Roles": [
                {
                  "Ref": "IamRoleLambdaExecution"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
            "Export": {
              "Name": "sls-prueba-tecnica-mvc-dev-ServerlessDeploymentBucketName"
            }
          },
          "CancelarFondoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CancelarFondoLambdaVersionZUCfbiANnYV8hKewk1gCC0lq2v0rAktW7ypoxKSXoU"
            },
            "Export": {
              "Name": "sls-prueba-tecnica-mvc-dev-CancelarFondoLambdaFunctionQualifiedArn"
            }
          },
          "CrearUsuarioLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CrearUsuarioLambdaVersionZlA5ayJlw6eH5M25K3gxTlqhm0SjKTkj5IuLlWDxYg"
            },
            "Export": {
              "Name": "sls-prueba-tecnica-mvc-dev-CrearUsuarioLambdaFunctionQualifiedArn"
            }
          },
          "ObtenerHistorialLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ObtenerHistorialLambdaVersionVaZwnPVpWyxNE3jRflMCo3ACro2F04IZtgJSjZrwI"
            },
            "Export": {
              "Name": "sls-prueba-tecnica-mvc-dev-ObtenerHistorialLambdaFunctionQualifiedArn"
            }
          },
          "SuscribirFondoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SuscribirFondoLambdaVersionXnDITV4ydH8y2jV1kFUzPgQ0EQ3oBKaIja2tEOqxI"
            },
            "Export": {
              "Name": "sls-prueba-tecnica-mvc-dev-SuscribirFondoLambdaFunctionQualifiedArn"
            }
          },
          "ListarUsuariosLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListarUsuariosLambdaVersiondRYsWh0Q3LZGD24jzDONAjSdsJnPa2Kh03goQevPM"
            },
            "Export": {
              "Name": "sls-prueba-tecnica-mvc-dev-ListarUsuariosLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-prueba-tecnica-mvc-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "dashboard": {
      "isEnabledForService": false,
      "requiredAuthentication": false,
      "orgFeaturesInUse": null,
      "orgObservabilityIntegrations": null,
      "serviceAppId": null,
      "serviceProvider": null,
      "instanceParameters": null
    },
    "serviceRawFile": "service: prueba-tecnica-mvc\r\n\r\nplugins:\r\n  - serverless-plugin-include-dependencies\r\n\r\nprovider:\r\n  name: aws\r\n  runtime: python3.8\r\n  region: us-east-1\r\n  stage: dev\r\n  iamRoleStatements:\r\n    - Action:\r\n        - dynamodb:*\r\n        - sns:Publish\r\n      Effect: Allow\r\n      Resource: '*'\r\n  #timeout: 10  # Segundos (por defecto es 6)\r\n  #memorySize: 512  # MB (aumenta si la función es pesada)\r\n\r\nfunctions:\r\n  cancelarFondo:\r\n    handler: lambda_functions/cancelar_fondo.cancelarFondo\r\n    events:\r\n      - http:\r\n          method: post\r\n          path: /fondos/cancelar\r\n          cors: true\r\n\r\n  crearUsuario:\r\n    handler: lambda_functions/crear_usuario.crear_usuario\r\n    events:\r\n      - http:\r\n          method: post\r\n          path: /usuario/crear_usuario\r\n          cors: true\r\n\r\n  obtenerHistorial:\r\n    handler: lambda_functions/historial.obtener_historial\r\n    events:\r\n      - http:\r\n          path: /usuarios/{idUsuario}/historial\r\n          method: get\r\n          cors: true\r\n\r\n  suscribirFondo:\r\n    handler: lambda_functions/suscribir_fondo.suscribir_fondo\r\n    events:\r\n      - http:\r\n          method: post\r\n          path: /fondos/suscribir\r\n          cors: true\r\n\r\n  listarUsuarios:\r\n    handler: lambda_functions/listar_usuarios.listar_usuarios\r\n    events:\r\n      - http:\r\n          method: get\r\n          path: /usuarios\r\n          cors: true\r\n      - http:\r\n          method: get\r\n          path: /usuarios/{idUsuario}\r\n          cors: true\r\n\r\nresources:\r\n  Resources:\r\n    FondosTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: Fondos\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: id\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: id\r\n            KeyType: HASH\r\n\r\n    UsuariosTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: Usuarios\r\n        BillingMode: PAY_PER_REQUEST\r\n        AttributeDefinitions:\r\n          - AttributeName: idUsuario\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: idUsuario\r\n            KeyType: HASH\r\n    \r\n    SuscripcionesTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: Suscripciones\r\n        AttributeDefinitions:\r\n          - AttributeName: idUsuario\r\n            AttributeType: S\r\n          - AttributeName: idFondo\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: idUsuario\r\n            KeyType: HASH\r\n          - AttributeName: idFondo\r\n            KeyType: RANGE\r\n        BillingMode: PAY_PER_REQUEST\r\n    \r\n    TransaccionesTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: Transacciones\r\n        AttributeDefinitions:\r\n          - AttributeName: idTransaccion\r\n            AttributeType: S  # String (UUID generado en el código)\r\n          - AttributeName: idUsuario\r\n            AttributeType: S  # String (ID del usuario)\r\n        KeySchema:\r\n          - AttributeName: idTransaccion\r\n            KeyType: HASH  # Clave primaria\r\n          - AttributeName: idUsuario\r\n            KeyType: RANGE  # Clave de ordenación (para búsquedas por usuario)\r\n        BillingMode: PAY_PER_REQUEST  # Escalado automático\r\n        GlobalSecondaryIndexes:\r\n          - IndexName: UsuarioIndex  # Índice secundario para buscar transacciones por usuario\r\n            KeySchema:\r\n              - AttributeName: idUsuario\r\n                KeyType: HASH\r\n            Projection:\r\n              ProjectionType: ALL  # Incluir todos los atributos en el índice\r\n\r\n    CancelacionesTable:\r\n      Type: AWS::DynamoDB::Table\r\n      Properties:\r\n        TableName: Cancelaciones\r\n        AttributeDefinitions:\r\n          - AttributeName: idTransaccion\r\n            AttributeType: S\r\n          - AttributeName: idUsuario\r\n            AttributeType: S\r\n        KeySchema:\r\n          - AttributeName: idTransaccion\r\n            KeyType: HASH\r\n          - AttributeName: idUsuario\r\n            KeyType: RANGE\r\n        BillingMode: PAY_PER_REQUEST\r\n\r\n    # Permisos para SES/SNS (notificaciones)\r\n    NotificacionesPolicy:\r\n      Type: AWS::IAM::Policy\r\n      Properties:\r\n        PolicyName: NotificacionesAccess\r\n        PolicyDocument:\r\n          Version: '2012-10-17'\r\n          Statement:\r\n            - Effect: Allow\r\n              Action:\r\n                - ses:SendEmail\r\n                - sns:Publish\r\n              Resource: '*'\r\n        Roles:\r\n           - { \"Ref\": \"IamRoleLambdaExecution\" }\r\n\r\n",
    "command": [
      "deploy"
    ],
    "options": {
      "verbose": true
    },
    "orgId": "e9d758ec-d119-4505-b66a-d8c5601cf534",
    "orgName": "emanotas17",
    "userId": "2pFhFR0SkXqh289PPz",
    "userName": "emanotas17",
    "serviceProviderAwsAccountId": "904524675325",
    "serviceProviderAwsCfStackName": "prueba-tecnica-mvc-dev",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:904524675325:stack/prueba-tecnica-mvc-dev/3d92b960-279d-11f0-82e3-12ebddb2c7d5",
    "serviceProviderAwsCfStackCreated": "2025-05-02T21:34:34.610Z",
    "serviceProviderAwsCfStackUpdated": "2025-05-05T15:07:38.649Z",
    "serviceProviderAwsCfStackStatus": "UPDATE_COMPLETE",
    "serviceProviderAwsCfStackOutputs": [
      {
        "OutputKey": "CancelarFondoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:904524675325:function:prueba-tecnica-mvc-dev-cancelarFondo:35",
        "Description": "Current Lambda function version",
        "ExportName": "sls-prueba-tecnica-mvc-dev-CancelarFondoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "SuscribirFondoLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:904524675325:function:prueba-tecnica-mvc-dev-suscribirFondo:36",
        "Description": "Current Lambda function version",
        "ExportName": "sls-prueba-tecnica-mvc-dev-SuscribirFondoLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "CrearUsuarioLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:904524675325:function:prueba-tecnica-mvc-dev-crearUsuario:33",
        "Description": "Current Lambda function version",
        "ExportName": "sls-prueba-tecnica-mvc-dev-CrearUsuarioLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ListarUsuariosLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:904524675325:function:prueba-tecnica-mvc-dev-listarUsuarios:23",
        "Description": "Current Lambda function version",
        "ExportName": "sls-prueba-tecnica-mvc-dev-ListarUsuariosLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ObtenerHistorialLambdaFunctionQualifiedArn",
        "OutputValue": "arn:aws:lambda:us-east-1:904524675325:function:prueba-tecnica-mvc-dev-obtenerHistorial:35",
        "Description": "Current Lambda function version",
        "ExportName": "sls-prueba-tecnica-mvc-dev-ObtenerHistorialLambdaFunctionQualifiedArn"
      },
      {
        "OutputKey": "ServiceEndpoint",
        "OutputValue": "https://mkyr5sql3g.execute-api.us-east-1.amazonaws.com/dev",
        "Description": "URL of the service endpoint",
        "ExportName": "sls-prueba-tecnica-mvc-dev-ServiceEndpoint"
      },
      {
        "OutputKey": "ServerlessDeploymentBucketName",
        "OutputValue": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
        "ExportName": "sls-prueba-tecnica-mvc-dev-ServerlessDeploymentBucketName"
      }
    ],
    "compiledCloudFormationTemplate": {
      "AWSTemplateFormatVersion": "2010-09-09",
      "Description": "The AWS CloudFormation template for this Serverless application",
      "Resources": {
        "CancelarFondoLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-cancelarFondo"
          }
        },
        "CrearUsuarioLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-crearUsuario"
          }
        },
        "ObtenerHistorialLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-obtenerHistorial"
          }
        },
        "SuscribirFondoLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-suscribirFondo"
          }
        },
        "ListarUsuariosLogGroup": {
          "Type": "AWS::Logs::LogGroup",
          "Properties": {
            "LogGroupName": "/aws/lambda/prueba-tecnica-mvc-dev-listarUsuarios"
          }
        },
        "IamRoleLambdaExecution": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": [
                      "lambda.amazonaws.com"
                    ]
                  },
                  "Action": [
                    "sts:AssumeRole"
                  ]
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": {
                  "Fn::Join": [
                    "-",
                    [
                      "prueba-tecnica-mvc",
                      "dev",
                      "lambda"
                    ]
                  ]
                },
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogStream",
                        "logs:CreateLogGroup",
                        "logs:TagResource"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/prueba-tecnica-mvc-dev*:*"
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:PutLogEvents"
                      ],
                      "Resource": [
                        {
                          "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/prueba-tecnica-mvc-dev*:*:*"
                        }
                      ]
                    },
                    {
                      "Action": [
                        "dynamodb:*",
                        "sns:Publish"
                      ],
                      "Effect": "Allow",
                      "Resource": "*"
                    }
                  ]
                }
              }
            ],
            "Path": "/",
            "RoleName": {
              "Fn::Join": [
                "-",
                [
                  "prueba-tecnica-mvc",
                  "dev",
                  {
                    "Ref": "AWS::Region"
                  },
                  "lambdaRole"
                ]
              ]
            }
          }
        },
        "CancelarFondoLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
              "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
            },
            "Handler": "lambda_functions/cancelar_fondo.cancelarFondo",
            "Runtime": "python3.8",
            "FunctionName": "prueba-tecnica-mvc-dev-cancelarFondo",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "CancelarFondoLogGroup"
          ]
        },
        "CrearUsuarioLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
              "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
            },
            "Handler": "lambda_functions/crear_usuario.crear_usuario",
            "Runtime": "python3.8",
            "FunctionName": "prueba-tecnica-mvc-dev-crearUsuario",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "CrearUsuarioLogGroup"
          ]
        },
        "ObtenerHistorialLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
              "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
            },
            "Handler": "lambda_functions/historial.obtener_historial",
            "Runtime": "python3.8",
            "FunctionName": "prueba-tecnica-mvc-dev-obtenerHistorial",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "ObtenerHistorialLogGroup"
          ]
        },
        "SuscribirFondoLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
              "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
            },
            "Handler": "lambda_functions/suscribir_fondo.suscribir_fondo",
            "Runtime": "python3.8",
            "FunctionName": "prueba-tecnica-mvc-dev-suscribirFondo",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "SuscribirFondoLogGroup"
          ]
        },
        "ListarUsuariosLambdaFunction": {
          "Type": "AWS::Lambda::Function",
          "Properties": {
            "Code": {
              "S3Bucket": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
              "S3Key": "serverless/prueba-tecnica-mvc/dev/1746458008247-2025-05-05T15:13:28.247Z/prueba-tecnica-mvc.zip"
            },
            "Handler": "lambda_functions/listar_usuarios.listar_usuarios",
            "Runtime": "python3.8",
            "FunctionName": "prueba-tecnica-mvc-dev-listarUsuarios",
            "MemorySize": 1024,
            "Timeout": 6,
            "Role": {
              "Fn::GetAtt": [
                "IamRoleLambdaExecution",
                "Arn"
              ]
            }
          },
          "DependsOn": [
            "ListarUsuariosLogGroup"
          ]
        },
        "CancelarFondoLambdaVersionZUCfbiANnYV8hKewk1gCC0lq2v0rAktW7ypoxKSXoU": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CancelarFondoLambdaFunction"
            },
            "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
          }
        },
        "CrearUsuarioLambdaVersionZlA5ayJlw6eH5M25K3gxTlqhm0SjKTkj5IuLlWDxYg": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "CrearUsuarioLambdaFunction"
            },
            "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
          }
        },
        "ObtenerHistorialLambdaVersionVaZwnPVpWyxNE3jRflMCo3ACro2F04IZtgJSjZrwI": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ObtenerHistorialLambdaFunction"
            },
            "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
          }
        },
        "SuscribirFondoLambdaVersionXnDITV4ydH8y2jV1kFUzPgQ0EQ3oBKaIja2tEOqxI": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "SuscribirFondoLambdaFunction"
            },
            "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
          }
        },
        "ListarUsuariosLambdaVersiondRYsWh0Q3LZGD24jzDONAjSdsJnPa2Kh03goQevPM": {
          "Type": "AWS::Lambda::Version",
          "DeletionPolicy": "Retain",
          "Properties": {
            "FunctionName": {
              "Ref": "ListarUsuariosLambdaFunction"
            },
            "CodeSha256": "uV7yWv0eKqUCcMYUv2H+Js/WhDZGXXcVWKcKOLZXJoc="
          }
        },
        "ApiGatewayRestApi": {
          "Type": "AWS::ApiGateway::RestApi",
          "Properties": {
            "Name": "dev-prueba-tecnica-mvc",
            "EndpointConfiguration": {
              "Types": [
                "EDGE"
              ]
            },
            "Policy": ""
          }
        },
        "ApiGatewayResourceFondos": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "fondos",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFondosCancelar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFondos"
            },
            "PathPart": "cancelar",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceFondosSuscribir": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceFondos"
            },
            "PathPart": "suscribir",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUsuario": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "usuario",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUsuarioCrearusuario": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceUsuario"
            },
            "PathPart": "crear_usuario",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUsuarios": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Fn::GetAtt": [
                "ApiGatewayRestApi",
                "RootResourceId"
              ]
            },
            "PathPart": "usuarios",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUsuariosIdusuarioVar": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceUsuarios"
            },
            "PathPart": "{idUsuario}",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayResourceUsuariosIdusuarioVarHistorial": {
          "Type": "AWS::ApiGateway::Resource",
          "Properties": {
            "ParentId": {
              "Ref": "ApiGatewayResourceUsuariosIdusuarioVar"
            },
            "PathPart": "historial",
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFondosCancelarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFondosCancelar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUsuarioCrearusuarioOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUsuarioCrearusuario"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUsuariosIdusuarioVarHistorialOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUsuariosIdusuarioVarHistorial"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFondosSuscribirOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceFondosSuscribir"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUsuariosOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUsuarios"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodUsuariosIdusuarioVarOptions": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "AuthorizationType": "NONE",
            "HttpMethod": "OPTIONS",
            "MethodResponses": [
              {
                "StatusCode": "200",
                "ResponseParameters": {
                  "method.response.header.Access-Control-Allow-Origin": true,
                  "method.response.header.Access-Control-Allow-Headers": true,
                  "method.response.header.Access-Control-Allow-Methods": true
                },
                "ResponseModels": {}
              }
            ],
            "RequestParameters": {},
            "Integration": {
              "Type": "MOCK",
              "RequestTemplates": {
                "application/json": "{statusCode:200}"
              },
              "ContentHandling": "CONVERT_TO_TEXT",
              "IntegrationResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": "'*'",
                    "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                    "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                  },
                  "ResponseTemplates": {
                    "application/json": ""
                  }
                }
              ]
            },
            "ResourceId": {
              "Ref": "ApiGatewayResourceUsuariosIdusuarioVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            }
          }
        },
        "ApiGatewayMethodFondosCancelarPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFondosCancelar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "CancelarFondoLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "CancelarFondoLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodUsuarioCrearusuarioPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUsuarioCrearusuario"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "CrearUsuarioLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "CrearUsuarioLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodUsuariosIdusuarioVarHistorialGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUsuariosIdusuarioVarHistorial"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "ObtenerHistorialLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "ObtenerHistorialLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodFondosSuscribirPost": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "POST",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceFondosSuscribir"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "SuscribirFondoLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "SuscribirFondoLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodUsuariosGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUsuarios"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "ListarUsuariosLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "ListarUsuariosLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayMethodUsuariosIdusuarioVarGet": {
          "Type": "AWS::ApiGateway::Method",
          "Properties": {
            "HttpMethod": "GET",
            "RequestParameters": {},
            "ResourceId": {
              "Ref": "ApiGatewayResourceUsuariosIdusuarioVar"
            },
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "ApiKeyRequired": "<REDACTED>",
            "AuthorizationType": "NONE",
            "Integration": {
              "IntegrationHttpMethod": "POST",
              "Type": "AWS_PROXY",
              "Uri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    {
                      "Fn::GetAtt": [
                        "ListarUsuariosLambdaFunction",
                        "Arn"
                      ]
                    },
                    "/invocations"
                  ]
                ]
              }
            },
            "MethodResponses": []
          },
          "DependsOn": [
            "ListarUsuariosLambdaPermissionApiGateway"
          ]
        },
        "ApiGatewayDeployment1746457999254": {
          "Type": "AWS::ApiGateway::Deployment",
          "Properties": {
            "RestApiId": {
              "Ref": "ApiGatewayRestApi"
            },
            "StageName": "dev"
          },
          "DependsOn": [
            "ApiGatewayMethodFondosCancelarOptions",
            "ApiGatewayMethodUsuarioCrearusuarioOptions",
            "ApiGatewayMethodUsuariosIdusuarioVarHistorialOptions",
            "ApiGatewayMethodFondosSuscribirOptions",
            "ApiGatewayMethodUsuariosOptions",
            "ApiGatewayMethodUsuariosIdusuarioVarOptions",
            "ApiGatewayMethodFondosCancelarPost",
            "ApiGatewayMethodUsuarioCrearusuarioPost",
            "ApiGatewayMethodUsuariosIdusuarioVarHistorialGet",
            "ApiGatewayMethodFondosSuscribirPost",
            "ApiGatewayMethodUsuariosGet",
            "ApiGatewayMethodUsuariosIdusuarioVarGet"
          ]
        },
        "CancelarFondoLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CancelarFondoLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "CrearUsuarioLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "CrearUsuarioLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "ObtenerHistorialLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "ObtenerHistorialLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "SuscribirFondoLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "SuscribirFondoLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "ListarUsuariosLambdaPermissionApiGateway": {
          "Type": "AWS::Lambda::Permission",
          "Properties": {
            "FunctionName": {
              "Fn::GetAtt": [
                "ListarUsuariosLambdaFunction",
                "Arn"
              ]
            },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com",
            "SourceArn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  "/*/*"
                ]
              ]
            }
          }
        },
        "FondosTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Fondos",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "UsuariosTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Usuarios",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "idUsuario",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "idUsuario",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "SuscripcionesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Suscripciones",
            "AttributeDefinitions": [
              {
                "AttributeName": "idUsuario",
                "AttributeType": "S"
              },
              {
                "AttributeName": "idFondo",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "idUsuario",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "idFondo",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "TransaccionesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Transacciones",
            "AttributeDefinitions": [
              {
                "AttributeName": "idTransaccion",
                "AttributeType": "S"
              },
              {
                "AttributeName": "idUsuario",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "idTransaccion",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "idUsuario",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "UsuarioIndex",
                "KeySchema": [
                  {
                    "AttributeName": "idUsuario",
                    "KeyType": "HASH"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        },
        "CancelacionesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "Cancelaciones",
            "AttributeDefinitions": [
              {
                "AttributeName": "idTransaccion",
                "AttributeType": "S"
              },
              {
                "AttributeName": "idUsuario",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "idTransaccion",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "idUsuario",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST"
          }
        },
        "NotificacionesPolicy": {
          "Type": "AWS::IAM::Policy",
          "Properties": {
            "PolicyName": "NotificacionesAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ses:SendEmail",
                    "sns:Publish"
                  ],
                  "Resource": "*"
                }
              ]
            },
            "Roles": [
              {
                "Ref": "IamRoleLambdaExecution"
              }
            ]
          }
        }
      },
      "Outputs": {
        "ServerlessDeploymentBucketName": {
          "Value": "serverless-framework-deployments-us-east-1-e3de6426-35b6",
          "Export": {
            "Name": "sls-prueba-tecnica-mvc-dev-ServerlessDeploymentBucketName"
          }
        },
        "CancelarFondoLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CancelarFondoLambdaVersionZUCfbiANnYV8hKewk1gCC0lq2v0rAktW7ypoxKSXoU"
          },
          "Export": {
            "Name": "sls-prueba-tecnica-mvc-dev-CancelarFondoLambdaFunctionQualifiedArn"
          }
        },
        "CrearUsuarioLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "CrearUsuarioLambdaVersionZlA5ayJlw6eH5M25K3gxTlqhm0SjKTkj5IuLlWDxYg"
          },
          "Export": {
            "Name": "sls-prueba-tecnica-mvc-dev-CrearUsuarioLambdaFunctionQualifiedArn"
          }
        },
        "ObtenerHistorialLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ObtenerHistorialLambdaVersionVaZwnPVpWyxNE3jRflMCo3ACro2F04IZtgJSjZrwI"
          },
          "Export": {
            "Name": "sls-prueba-tecnica-mvc-dev-ObtenerHistorialLambdaFunctionQualifiedArn"
          }
        },
        "SuscribirFondoLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "SuscribirFondoLambdaVersionXnDITV4ydH8y2jV1kFUzPgQ0EQ3oBKaIja2tEOqxI"
          },
          "Export": {
            "Name": "sls-prueba-tecnica-mvc-dev-SuscribirFondoLambdaFunctionQualifiedArn"
          }
        },
        "ListarUsuariosLambdaFunctionQualifiedArn": {
          "Description": "Current Lambda function version",
          "Value": {
            "Ref": "ListarUsuariosLambdaVersiondRYsWh0Q3LZGD24jzDONAjSdsJnPa2Kh03goQevPM"
          },
          "Export": {
            "Name": "sls-prueba-tecnica-mvc-dev-ListarUsuariosLambdaFunctionQualifiedArn"
          }
        },
        "ServiceEndpoint": {
          "Description": "URL of the service endpoint",
          "Value": {
            "Fn::Join": [
              "",
              [
                "https://",
                {
                  "Ref": "ApiGatewayRestApi"
                },
                ".execute-api.",
                {
                  "Ref": "AWS::Region"
                },
                ".",
                {
                  "Ref": "AWS::URLSuffix"
                },
                "/dev"
              ]
            ]
          },
          "Export": {
            "Name": "sls-prueba-tecnica-mvc-dev-ServiceEndpoint"
          }
        }
      }
    }
  }
}